¬ведение:

¬ JS точка с зап€той автоматически ставитс€ в конце каждого предложени€, поэтому эти конструкции семантически различны:

function foo() {
return
{
foo: 'bar'
}
}
function bar() {
return {
foo: 'bar'
}
}


1 == 1; //true
'foo' == 'foo'; //true
[1,2,3] == [1,2,3]; //false
new Array(3) == ",,"; //true
new Array(3).toString(); //",,"
new Array(3) === ",,"; //false

¬ JS оператор сравнени€ == приводит тип части уравнени€ к типу другой части
ќператор === не приводит

“олько один тип чисел: float64, 8 байт с плавающей точкой
0.1+0.2==0.3 //false, т.к. 0.1+0.2 = 0.3000000000011 что-то такое
1 = 1.0

1/0 = Infinity
-1/0 = -Infinity
NaN = не числовое значение
Ћюба€ операци€ с NaN дает NaN

Ќекоторые удобные функции: 
Х Number(10); // 10
Х Number(У42.23Ф); // 42.23
Х Number(У71oshiФ); // NaN
Х parseInt(У18Ф); // 18
Х parseInt(У19kdjasФ); // 19
Х parseInt(У74.54Ф); // 74
Х parseFloat(У74.54Ф); // 74.54
parseInt("ff"); //NaN
parseInt("ff","16"); //255
parseInt(У0x10Ф); // 16
parseInt(У0x10Ф,Ф10Ф); // 0
var y = 43.81327;
y.toFixed(); //'44'
y.toFixed(1); //'43.8'
y.toFixed(2); //'43.81'
y.toFixed(3); //'43.813'
